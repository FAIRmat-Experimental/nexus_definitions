category: base
doc: |   
  A device blocking the beam in a temporal periodic pattern.
  
  A disk which blocks the beam but has one or more slits to periodically
  let neutrons through as the disk rotates. Often used in pairs, one
  NXdisk_chopper should be defined for each disk.
  
  The rotation of the disk is commonly monitored by recording a timestamp for
  each full rotation of disk, by having a sensor in the stationary disk housing
  sensing when it is aligned with a feature (such as a magnet) on the disk.
  We refer to this below as the "top-dead-center signal".
  
  Angles and positive rotation speeds are measured in an anticlockwise
  direction when facing away from the source.

symbols: 
  doc: | 
    This symbol will be used below to coordinate datasets with the same shape.

  n: | 
    Number of slits in the disk

type: group
NXdisk_chopper(NXobject):
  type:
    doc: | 
      Type of the disk-chopper':' only one from the enumerated list (match text exactly)
    enumeration: [Chopper type single, contra_rotating_pair, synchro_pair]
  rotation_speed(NX_FLOAT):
    unit: NX_FREQUENCY
    doc: |       
      Chopper rotation speed. Positive for anticlockwise rotation when
      facing away from the source, negative otherwise.
  slits(NX_INT):
    doc: | 
      Number of slits
  slit_angle(NX_FLOAT):
    unit: NX_ANGLE
    doc: | 
      Angular opening
  pair_separation(NX_FLOAT):
    unit: NX_LENGTH
    doc: | 
      Disk spacing in direction of beam
  slit_edges(NX_FLOAT):
    unit: NX_ANGLE
    doc: |       
      Angle of each edge of every slit from the position of the
      top-dead-center timestamp sensor, anticlockwise when facing
      away from the source.
      The first edge must be the opening edge of a slit, thus the last edge
      may have an angle greater than 360 degrees.
    dimensions:
      dim: [[1, 2n]]
  top_dead_center(NX_NUMBER):
    unit: NX_TIME
    doc: |       
      Timestamps of the top-dead-center signal. The times are relative
      to the "start" attribute and in the units specified in the "units"
      attribute. Please note that absolute
      timestamps under unix are relative to ``1970-01-01T00':'00':'00.0Z``.
    \@start:
      type: NX_DATE_TIME
  beam_position(NX_FLOAT):
    unit: NX_ANGLE
    doc: |       
      Angular separation of the center of the beam and the
      top-dead-center timestamp sensor, anticlockwise when facing
      away from the source.
  radius(NX_FLOAT):
    unit: NX_LENGTH
    doc: | 
      Radius of the disk
  slit_height(NX_FLOAT):
    unit: NX_LENGTH
    doc: | 
      Total slit height
  phase(NX_FLOAT):
    unit: NX_ANGLE
    doc: | 
      Chopper phase angle
  delay(NX_NUMBER):
    unit: NX_TIME
    doc: |       
      Time difference between timing system t0 and chopper driving clock signal
  ratio(NX_INT):
    doc: |       
      Pulse reduction factor of this chopper in relation to other
      choppers/fastest pulse in the instrument
  distance(NX_FLOAT):
    unit: NX_LENGTH
    doc: |       
      Effective distance to the origin.
      Note, it is recommended to use NXtransformations instead.
  wavelength_range(NX_FLOAT):
    unit: NX_WAVELENGTH
    doc: | 
      Low and high values of wavelength range transmitted
    dimensions:
      dim: [[1, 2]]
  (NXgeometry):
    deprecated: Use the field `depends_on` and ':'ref':'`NXtransformations` to position the chopper and NXoff_geometry to describe its shape instead
  (NXoff_geometry):
    exists: ['min', '0']
    doc: |       
      This group describes the shape of the beam line component
  \@default:
    doc: |       
      .. index':'':' plotting
      
      Declares which child group contains a path leading
      to a ':'ref':'`NXdata` group.
      
      It is recommended (as of NIAC2014) to use this attribute
      to help define the path to the default dataset to be plotted.
      See https':'//www.nexusformat.org/2014_How_to_find_default_data.html
      for a summary of the discussion.
  depends_on(NX_CHAR):
    doc: |       
      NeXus positions components by applying a set of translations and rotations
      to apply to the component starting from 0, 0, 0. The order of these operations
      is critical and forms what NeXus calls a dependency chain. The depends_on
      field defines the path to the top most operation of the dependency chain or the
      string "." if located in the origin. Usually these operations are stored in a
      NXtransformations group. But NeXus allows them to be stored anywhere.
      
      The reference plane of the disk chopper includes the surface of the spinning disk which faces
      the source. The reference point in the x and y axis is the point on this surface which is the
      centre of the axle which the disk is spinning around. The reference plane is orthogonal to
      the z axis and its position is the reference point on that axis.
              
      Note':' This reference point in almost all practical cases is not where the beam passes though.
              
      .. image':'':' disk_chopper/disk_chopper.png
          ':'width':' 40%
  (NXtransformations):
    doc: |       
      This is the group recommended for holding the chain of translation
      and rotation operations necessary to position the component within
      the instrument. The dependency chain may however traverse similar groups in
      other component groups.
