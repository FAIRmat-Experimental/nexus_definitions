category: base
doc: |   
  A  wavelength defining device.
  
  This is a base class for everything which
  selects a wavelength or energy, be it a
  monochromator crystal, a velocity selector,
  an undulator or whatever.
  
  The expected units are':'
  
  * wavelength':' angstrom
  * energy':'     eV

type: group
NXmonochromator(NXobject):
  wavelength(NX_FLOAT):
    unit: NX_WAVELENGTH
    doc: | 
      wavelength selected
  wavelength_error(NX_FLOAT):
    unit: NX_WAVELENGTH
    deprecated: see https':'//github.com/nexusformat/definitions/issues/820
    doc: | 
      wavelength standard deviation
  wavelength_errors(NX_FLOAT):
    unit: NX_WAVELENGTH
    doc: | 
      wavelength standard deviation
  energy(NX_FLOAT):
    unit: NX_ENERGY
    doc: | 
      energy selected
  energy_error(NX_FLOAT):
    unit: NX_ENERGY
    deprecated: see https':'//github.com/nexusformat/definitions/issues/820
    doc: | 
      energy standard deviation
  energy_errors(NX_FLOAT):
    unit: NX_ENERGY
    doc: | 
      energy standard deviation
  (NXdata)distribution:
  (NXgeometry)geometry:
    deprecated: Use the field `depends_on` and ':'ref':'`NXtransformations` to position the monochromator and NXoff_geometry to describe its shape instead
  (NXoff_geometry):
    exists: ['min', '0']
    doc: |       
      This group describes the shape of the beam line component
  (NXcrystal):
    doc: | 
      Use as many crystals as necessary to describe
  (NXvelocity_selector):
  (NXgrating):
    doc: | 
      For diffraction grating based monochromators
  \@default:
    doc: |       
      .. index':'':' plotting
      
      Declares which child group contains a path leading
      to a ':'ref':'`NXdata` group.
      
      It is recommended (as of NIAC2014) to use this attribute
      to help define the path to the default dataset to be plotted.
      See https':'//www.nexusformat.org/2014_How_to_find_default_data.html
      for a summary of the discussion.
  depends_on(NX_CHAR):
    doc: |       
      NeXus positions components by applying a set of translations and rotations
      to apply to the component starting from 0, 0, 0. The order of these operations
      is critical and forms what NeXus calls a dependency chain. The depends_on
      field defines the path to the top most operation of the dependency chain or the
      string "." if located in the origin. Usually these operations are stored in a
      NXtransformations group. But NeXus allows them to be stored anywhere.
      
      .. todo':'':'
        Add a definition for the reference point of a monochromator.
  (NXtransformations):
    doc: |       
      This is the group recommended for holding the chain of translation
      and rotation operations necessary to position the component within
      the instrument. The dependency chain may however traverse similar groups in
      other component groups.
