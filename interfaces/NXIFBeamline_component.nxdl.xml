<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl" ?>
<!--
# NeXus - Neutron and X-ray Common Data Format
# 
# Copyright (C) 2008-2012 NeXus International Advisory Committee (NIAC)
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org

########### SVN repository information ###################
# $Date: 2012-09-27 05:57:58 +0200 (Thu, 27 Sep 2012) $
# $Author: Pete Jemian $
# $Revision: 1162 $
# $HeadURL: https://svn.nexusformat.org/definitions/branches/interfaces/base_classes/NXaperture.nxdl.xml $
# $Id: NXaperture.nxdl.xml 1162 2012-09-27 03:57:58Z Pete Jemian $
########### SVN repository information ###################
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/@NXDL_RELEASE@" category="base"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://definition.nexusformat.org/nxdl/@NXDL_RELEASE@ ../nxdl.xsd"
    name="NXIFbeamline_component" 
    version="1.0"
    type="group" extends="NXobject">
    <doc>
		This is the interface for a beamline component. It contains those fields 
		 which are necessary to describe the position of the component in the 
		 beamline. All fields are axes. Each field has an offset attribute which 
		 generally is 0,0,0. But if there is a translational offset to the previous 
		 operation, then offset is the place to store it. Each field also has a 
		 depends_on attribute. This attribute serves to reconstruct the sequence 
		 of operations applied to position the component.  
    </doc>
    <field name="distance" type="NX_LENGTH">
		<attribute name="transformation_type">
			<enumeration>
				<item value="translation"/>
			</enumeration>
		</attribute>
		<attribute name="vector">
			<enumeration>
				<item value="0,0,1"/>
			</enumeration>
		</attribute>
		<attribute name="offset">
		</attribute>
		<attribute name="depends_on">
		</attribute>
        <doc>Distance along the beam</doc>
    </field>
   <field name="height" type="NX_LENGTH">
		<attribute name="transformation_type">
			<enumeration>
				<item value="translation"/>
			</enumeration>
		</attribute>
		<attribute name="vector">
			<enumeration>
				<item value="0,1,0"/>
			</enumeration>
		</attribute>
		<attribute name="offset">
		</attribute>
		<attribute name="depends_on">
		</attribute>
        <doc>Height in relation to the beam</doc>
    </field>
   <field name="x_translation" type="NX_LENGTH">
		<attribute name="transformation_type">
			<enumeration>
				<item value="translation"/>
			</enumeration>
		</attribute>
		<attribute name="vector">
			<enumeration>
				<item value="1,0,0"/>
			</enumeration>
		</attribute>
		<attribute name="offset">
		</attribute>
		<attribute name="depends_on">
		</attribute>
        <doc>Translation peperndicular to the beam in the scattering plane</doc>
    </field>
   <field name="rotation_angle" type="NX_ANGLE">
		<attribute name="transformation_type">
			<enumeration>
				<item value="rotation"/>
			</enumeration>
		</attribute>
		<attribute name="vector">
			<enumeration>
				<item value="0,1,0"/>
			</enumeration>
		</attribute>
		<attribute name="offset">
		</attribute>
		<attribute name="depends_on">
		</attribute>
        <doc>Rotation of the component around y</doc>
    </field>
   <field name="azimuthal_angle" type="NX_ANGLE">
		<attribute name="transformation_type">
			<enumeration>
				<item value="rotation"/>
			</enumeration>
		</attribute>
		<attribute name="vector">
			<enumeration>
				<item value="0,0,1"/>
			</enumeration>
		</attribute>
		<attribute name="offset">
		</attribute>
		<attribute name="depends_on">
		</attribute>
        <doc>Rotation of the component around z</doc>
    </field>
   <field name="meridional_angle" type="NX_ANGLE">
		<attribute name="transformation_type">
			<enumeration>
				<item value="rotation"/>
			</enumeration>
		</attribute>
		<attribute name="vector">
			<enumeration>
				<item value="1,0,0"/>
			</enumeration>
		</attribute>
		<attribute name="offset">
		</attribute>
		<attribute name="depends_on">
		</attribute>
        <doc>Rotation of the component around x</doc>
    </field>
    <field name="depends_on" type="NX_CHAR">
		<doc>
			This fields value is the axes on top of the dependency chain. 
			Or in other words: it names the last element in the chain of 
			operations required to position this component. By starting at 
			this named element and working down the depends_on chain the 
			transformation matrix for positioning the component can be 
			reconstructed.
		</doc>
    </field>
</definition>
