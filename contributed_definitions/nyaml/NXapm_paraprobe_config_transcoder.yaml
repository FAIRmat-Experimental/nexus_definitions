category: application
doc: |
  Configurations of a paraprobe-transcoder tool run in atom probe microscopy.
symbols:
  doc: The symbols used in the schema to specify e.g. dimensions of arrays.
NXapm_paraprobe_config_transcoder:
  (NXentry):
    exists: [min, 1, max, 1]
    # by default for appdefs the value of the exists keyword is required
    # unless it is explicitly specified differently
    \@version:
      doc: |
        Version specifier of this application definition.
    definition:
      doc: |
        Official NeXus NXDL schema with which this file was written.
      enumeration: [NXapm_paraprobe_config_transcoder]
    program:
      doc: |
        Given name of the program/software/tool with which this NeXus
        (configuration) file was generated.
      \@version:
        doc: |
          Ideally program version plus build number, or commit hash or description
          of ideally an ever persistent resource where the source code of the
          program and build instructions can be found so that the program can be
          configured ideally in such a manner that the result of this computational
          process is recreatable deterministically.
    analysis_identifier:
      exists: optional
      doc: |
        Ideally, a (globally persistent) unique identifier for referring
        to this analysis.
    analysis_description:
      exists: optional
      doc: Possibility for leaving a free-text description about this analysis.
    results_path:
      exists: optional
      doc: |
        Path to the directory where the tool should store NeXus/HDF5 results
        of this analysis. If not specified results will be stored in the
        current working directory.
    time_stamp(NX_DATE_TIME):
      doc: |
        ISO 8601 formatted time code with local time zone offset to UTC
        information included when this configuration file was created.

    (NXprocess):
      # NXapm_input base classes are specialized here because
      # paraprobe-transcoder is the entry point for community data
      # which are not necessarily NeXus
      dataset(NXapm_input_reconstruction):
        filename:
          doc: |
            The path and name of the file (technology partner or community format)
            from which to read the reconstructed ion positions. Currently, POS,
            ePOS, APT files from APSuite, and NXS, i.e. NeXus/HDF5 files
            are supported.
          \@version:
      iontypes(NXapm_input_ranging):
        filename:
          doc: |
            The path and name of the file (technology partner or community format
            from which to read the ranging definitions, i.e. how to map mass-to-
            charge-state ratios on iontypes. Currently, RRNG, RNG, and NXS, i.e.
            NeXus/HDF5 files are supported.
          \@version:

    performance(NXcs_profiling):
      current_working_directory:
